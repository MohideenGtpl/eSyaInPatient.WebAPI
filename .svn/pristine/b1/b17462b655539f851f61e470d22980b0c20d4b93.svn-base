using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace eSyaInPatient.DL.Entities
{
    public partial class eSyaEnterprise : DbContext
    {
        public static string _connString = "";

        public eSyaEnterprise()
        {
        }

        public eSyaEnterprise(DbContextOptions<eSyaEnterprise> options)
            : base(options)
        {
        }

        public virtual DbSet<GtEswrbl> GtEswrbl { get; set; }
        public virtual DbSet<GtEswrbm> GtEswrbm { get; set; }
        public virtual DbSet<GtEswrms> GtEswrms { get; set; }
        public virtual DbSet<GtEswrrl> GtEswrrl { get; set; }
        public virtual DbSet<GtEswrrm> GtEswrrm { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer(_connString);
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity<GtEswrbl>(entity =>
            {
                entity.HasKey(e => new { e.BusinessKey, e.WardId, e.RoomId });

                entity.ToTable("GT_ESWRBL");

                entity.Property(e => e.WardId).HasColumnName("WardID");

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.ConsignmentMarkupPerc).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);
            });

            modelBuilder.Entity<GtEswrbm>(entity =>
            {
                entity.HasKey(e => new { e.BusinessKey, e.RoomId });

                entity.ToTable("GT_ESWRBM");

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.BedNumber)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.BedStatus)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.HospitalNumber).HasColumnType("numeric(10, 0)");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.Remarks).HasMaxLength(50);

                entity.Property(e => e.RoomNumber)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<GtEswrms>(entity =>
            {
                entity.HasKey(e => e.WardId);

                entity.ToTable("GT_ESWRMS");

                entity.Property(e => e.WardId)
                    .HasColumnName("WardID")
                    .ValueGeneratedNever();

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.WardDesc)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.WardShortDesc)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<GtEswrrl>(entity =>
            {
                entity.HasKey(e => new { e.BusinessKey, e.WardId, e.RoomId, e.RateType, e.EffectiveFrom });

                entity.ToTable("GT_ESWRRL");

                entity.Property(e => e.WardId).HasColumnName("WardID");

                entity.Property(e => e.RoomId).HasColumnName("RoomID");

                entity.Property(e => e.EffectiveFrom).HasColumnType("datetime");

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DayCareTariff).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.EffectiveTill).HasColumnType("datetime");

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.ServiceChargePerc).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.Tariff).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<GtEswrrm>(entity =>
            {
                entity.HasKey(e => e.RoomId);

                entity.ToTable("GT_ESWRRM");

                entity.Property(e => e.RoomId)
                    .HasColumnName("RoomID")
                    .ValueGeneratedNever();

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.RoomDesc)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.RoomShortDesc)
                    .IsRequired()
                    .HasMaxLength(10);
            });
        }
    }
}
